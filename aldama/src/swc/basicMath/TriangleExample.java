package swc.basicMath;

import java.io.FileInputStream;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

// 예제 오류?
public class TriangleExample {
	static int X = 0, Y = 1, answer;
	static int[][] xy;
	static int[] a,b,c,sign;
	public static void main(String[] args) throws Exception{
		System.setIn(new FileInputStream("resources/swc/basicMath_triangleOnLattice_input.txt"));
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		for(int tc=1;tc<=T;++tc){
			answer = 0;
			a = new int[3];	b = new int[3]; c = new int[3]; sign = new int[3];
			xy = new int[3][2];
			for(int i=0;i<3;i++){
				xy[i][X] = sc.nextInt();
				xy[i][Y] = sc.nextInt();
			}
			Arrays.sort(xy, new Comparator<int[]>() {
				@Override
				public int compare(int[] o1, int[] o2) {
					return o1[X] - o2[X];
				}
			});
			countPointsInTriangle();
			
			System.out.printf("#%d %d",tc,answer);
			System.out.println();
		}
	}

	private static void countPointsInTriangle() {
		for(int i=0,j=0,k=0;i<3;i++){
			int temp;
			j = (i+1) % 3;
			k = (i+2) % 3;
			a[i] = xy[i][Y] - xy[j][Y];
			b[i] = xy[j][X] - xy[i][X];
			c[i] = xy[i][X]*xy[j][Y] - xy[j][X]*xy[i][Y];
			temp = a[i]*xy[k][X]+b[i]*xy[k][Y]+c[i];
			sign[i] = temp;
		}
		if(sign[0]==0||sign[1]==0||sign[2]==0){
			return;
		}
		
		int min, max, xindex, yindex;
		min = max = yindex = xy[0][Y];
		// b >= 0. 즉 선분 위에 점이 위치하면 방정식은 양수?
		for(xindex = xy[0][X]+1;xindex < xy[1][X]; xindex++){
			if(sign[0] < 0){ // 0번식이 2번식 위에 있으면?
				while(fnBeeline(xindex, min, 2) <= 0) min++;
				while(fnBeeline(xindex, min-1, 2) > 0) min--;
				while(fnBeeline(xindex, max, 0) >= 0) max--;
				while(fnBeeline(xindex, max+1, 0) < 0) max++;
			}else{
				while(fnBeeline(xindex, min, 0) <= 0) min++;
				while(fnBeeline(xindex, min-1, 0) > 0) min--;
				while(fnBeeline(xindex, max, 2) >= 0) max--;
				while(fnBeeline(xindex, max+1, 2) < 0) max++;
			}
			if(max >= min) answer += (max - min + 1);
		}
		for(int aa = 0; xindex < xy[2][X]; xindex++, aa++){
			if(xindex == xy[0][X]) continue;
			if(sign[1] < 0){ // 1번식이 2번식 위에 있으면?
				while(fnBeeline(xindex, min, 2) <= 0) min++;
				while(fnBeeline(xindex, min-1, 2) > 0) min--;
				while(fnBeeline(xindex, max, 1) >= 0) max--;
				while(fnBeeline(xindex, max+1, 1) < 0) max++;
			}else{
				while(fnBeeline(xindex, min, 1) <= 0) min++;
				while(fnBeeline(xindex, min-1, 1) > 0) min--;
				while(fnBeeline(xindex, max, 2) >= 0) max--;
				while(fnBeeline(xindex, max+1, 2) < 0) max++;
			}
			if(max >= min) answer += (max - min + 1);
		}
	}

	private static int fnBeeline(int x, int y, int i) {
		return a[i]*x+b[i]*y+c[i];
	}
}	
//	if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0if (sign[0] < 0) { // 0번식이 번식이 2번식 위에 있으면 있으면
//	while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;
//	while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min - 1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min-- ;
//	while (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= maxwhile (EQN(xindex, max, 0) >= max-- ;
//	while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;while (EQN(xindex, max + 1, 0) < max++;
//	}
//	else {else {else {else {else {else {
//	while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;while (EQN(xindex, min, 0) <= min++;
//	while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min - 1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min1, 0) > min-- ;
//	while (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) max-- ;
//	while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;
//	}
//	if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += if (max >= min) Answer += - min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);
//	}
//	for (for (for (for (for (int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {int aa=0; xindex < x[2]; xindex++, aa++) {
//	if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;if (xindex == x[0]) continue;
//	if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1if (sign[1] < 0) { // 1번식이 번식이 2번식 위에 있으면 있으면
//	while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;while (EQN(xindex, min, 2) <= 0) min++;
//	while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min - 1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min1, 2) > 0) min-- ;
//	while (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) maxwhile (EQN(xindex, max, 1) >= 0) max-- ;
//	while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;while (EQN(xindex, max + 1, 1) < 0) max++;
//	}
//	else {else {else {else {else {else {
//	while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;while (EQN(xindex, min, 1) <= 0) min++;
//	while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min while (EQN(xindex, min - 1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min1, 1) > 0) min-- ;
//	while (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) maxwhile (EQN(xindex, max, 2) >= 0) max-- ;
//	while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;while (EQN(xindex, max + 1, 2) < 0) max++;
//	}
//	if (max if (max if (max if (max if (max if (max if (max if (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max >= min) Answer += (max - min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);min + 1);
//	}
//	// 출력
//	PRINTANS:PRINTANS:PRINTANS:PRINTANS:PRINTANS:PRINTANS:PRINTANS:PRINTANS:PRINTANS:
//	printf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %dprintf("#%d %d\n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);n", test_case, Answer);
//	}
//	}
//}
